name: CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-test-and-image:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: todos
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            echo "Postgres is not ready yet... ($i)"
            sleep 2
          done

      - name: Restore
        run: |
          dotnet restore TodoService/TodoService.csproj
          dotnet restore TodoService.Tests/TodoService.Tests.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        env:
          # даём приложению строку подключения для тестов
          ConnectionStrings__Default: Host=localhost;Port=5432;Database=todos;Username=postgres;Password=postgres
        run: dotnet test TodoService.Tests/TodoService.Tests.csproj --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/test_results.trx'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./TodoService
          push: false
          tags: todoservice:ci
